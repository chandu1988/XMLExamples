<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="../../resources/stylesheet.xsl"?><chapter category="basics" xmlns="http://www.xml-sicherheit.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xml:id="signatures_syntax_signedinfo" xml:lang="de" xsi:schemaLocation="http://www.xml-sicherheit.de ../../resources/documentation.xsd">	<title>Das SignedInfo Element</title>	<text>		<p>Das erste und auch komplexeste Element innerhalb von <link id="signatures_syntax_signature.html">Signature</link> ist <strong>SignedInfo</strong> und enthält die verwendeten Algorithmen zur Kanonisierung und Signierung, eine oder mehrere Referenzen auf die signierten Daten, eventuelle Transformationen und die Hashwerte dieser Daten. <strong>SignedInfo</strong> enthält also alle Informationen zu den zu signierenden Ressourcen und ist damit der Teil, über den die digitale Signatur erstellt wird.</p>		<p>Mit dem Signieren der verwendeten Algorithmen erhöht sich die Sicherheit. Ein sicherer Algorithmus kann so nicht gegen einen unsicheren ausgetauscht werden, ohne dass die Signatur ungültig wird.</p>		<p>Weitere Eigenschaften, wie z.B. ein Zeitstempel oder die Seriennummer der verwendeten kryptografischen Hardware, können nur durch ein oder mehrere optionale Kindelemente <link id="signatures_syntax_object.html#SignatureProperties">SignatureProperties</link> in einem <link id="signatures_syntax_object.html">Object</link> Element angegeben werden. Für einen Zeitstempel existiert dazu beispielsweise das Element <keyword>timestamp</keyword>, mit dem ein Zeitstempel vor der Erstellung der Signatur in die signierten Daten eingebunden werden kann.</p>		<p>			<strong>SignedInfo</strong> kann ein optionales Attribut <keyword>Id</keyword> enthalten mit dem das Element z.B. von anderen Signaturen referenziert werden kann. Kindelemente von <strong>SignedInfo</strong> sind die Pflichtelemente <link id="signatures_syntax_signedinfo.html#CanonicalizationMethod">CanonicalizationMethod</link> und <link id="signatures_syntax_signedinfo.html#SignatureMethod">SignatureMethod</link> sowie ein oder mehrere <link id="signatures_syntax_signedinfo.html#Reference">Reference</link> Elemente.</p>		<headline id="CanonicalizationMethod">CanonicalizationMethod</headline>		<p>Das leere Pflichtelement <strong>CanonicalizationMethod</strong> enthält ein <keyword>Algorithm</keyword> Attribut zur Identifikation des <link id="signatures_canon.html">Kanonisierungs-Algorithmus</link>, der vor der Signaturberechnung auf die Daten in <link id="signatures_syntax_signedinfo.html">SignedInfo</link> angewendet wird. Die möglichen Werte des URI finden sich in der Tabelle bei der <link id="signatures_canon.html">Kanonisierung</link>.</p>		<headline id="SignatureMethod">SignatureMethod</headline>		<p>			<strong>SignatureMethod</strong> ist ebenfalls ein leeres Pflichtelement mit einem <keyword>Algorithm</keyword> Attribut und gibt den zur Signaturgenerierung (und später zur Verifizierung) verwendeten Algorithmus an. Mit diesem Algorithmus wird das kanonische <link id="signatures_syntax_signedinfo.html">SignedInfo</link> Element in den <link id="signatures_syntax_signaturevalue.html">SignatureValue</link> konvertiert. Der URI kann die in der folgenden Tabelle aufgeführten Werte annehmen. Die Verwendung von weiteren Algorithmen ist möglich, aber von der konkreten Implementierung abhängig.</p>		<table>			<head>				<data>Name</data>				<data>URI</data>				<data>Implementierung</data>			</head>			<row>				<data>					<strong>DSA with SHA 1 (DSS)</strong>				</data>				<data>http://www.w3.org/2000/09/xmldsig#dsa-sha1</data>				<data>erforderlich</data>			</row>			<row>				<data>					<strong>HMAC-SHA 1</strong>				</data>				<data>http://www.w3.org/2000/09/xmldsig#hmac-sha1</data>				<data>erforderlich</data>			</row>			<row>				<data>					<strong>RSA with SHA 1</strong>				</data>				<data>http://www.w3.org/2000/09/xmldsig#rsa-sha1</data>				<data>empfohlen</data>			</row>		</table>		<headline id="Reference">Reference</headline>		<p>Es folgen mindestens ein oder mehrere <strong>Reference</strong> Elemente, die angeben, welche beliebigen, auch binären, Daten in die Signaturberechnung miteinbezogen werden sollen. Die <strong>Reference</strong> Elemente stellen somit den Kern einer Signatur dar. Mehrere <strong>Reference</strong> Elemente entsprechen einer Sammelsignatur, also dem Signieren von mehreren Objekten mit einer Signatur. Jedes Element steht dabei für einen signierten Inhalt.</p>		<p>XML-Signaturen signieren niemals direkt die Ressourcen, sondern legen zunächst eine Liste von Hashwerten dieser an. Diese Liste wird dann mit einem Signatur-Algorithmus signiert. Damit wird nicht nur die Signatur-Operation beschleunigt, sondern auch ein einfacher Weg angeboten, um mehrere Ressourcen gleichzeitig zu signieren.</p>		<p>Zum <strong>Reference</strong> Element gehören drei optionale Attribute: <keyword>Id</keyword>, <keyword>Type</keyword> und <keyword>URI</keyword>. <keyword>Id</keyword> vom Typ ID dient der Identifizierung der Referenz. Das Attribut <keyword>Type</keyword> vom Typ anyURI bestimmt mit dem als Attributwert angegebenen URI den Typ der Referenz. Das Attribut bezieht sich nicht auf die referenzierten Daten, sondern auf den Container, der die Daten enthält. Damit kann angezeigt werden ob es sich bei der Referenz um ein <link id="signatures_syntax_object.html">Object</link>, <link id="signatures_syntax_object.html#SignatureProperties">SignatureProperty</link> oder <link id="signatures_syntax_object.html#Manifest">Manifest</link> Element handelt.</p>		<p>Das dritte Attribut <keyword>URI</keyword> ist ebenfalls vom Typ anyURI und enthält die Adresse, unter der die zu signierenden Daten verfügbar sind. Die Daten, auf die sich die digitale Signatur bezieht, müssen nicht im <link id="signatures_syntax_signature.html">Signature</link> Element selbst vorhanden sein, sondern können auch über das lokale Dateisystem oder eine Internet-Adresse referenziert werden. Enthält das Attribut also eine Webadresse handelt es sich um eine <link id="signatures_detached.html">detached signature</link>.</p>		<p>Daneben gibt es noch URIs, die auf das aktuelle Dokument verweisen wie z.B. <keyword>URI=&quot;&quot;</keyword>. Dieser spezielle Uniform Resource Identifier steht für alle XML-Knoten des aktuellen XML-Dokuments, jedoch ohne die möglicherweise vorhandenen Kommentare. Die zur Signatur gehörenden Knoten sind in der Auswahl jedoch enthalten.</p>		<p>Auch das gezielte Auswählen von Teildokumenten (<keyword>fragment identifier</keyword>) oder Elementen ist mittels XPointer und XPath möglich. Werden mehrere <strong>Reference</strong> Elemente angegeben darf das <keyword>URI</keyword> Attribut nur bei einem ausgelassen werden. In diesem Fall ist die Applikation dafür zuständig, die zu signierenden Daten zu bestimmen.</p>		<p>Reference besitzt drei Kindelemente: <link id="signatures_syntax_signedinfo.html#Transforms">Transforms</link> (optional) sowie die Pflichtelemente <link id="signatures_syntax_signedinfo.html#DigestMethod">DigestMethod</link> und <link id="signatures_syntax_signedinfo.html#DigestValue">DigestValue</link>.</p>		<headline id="Transforms">Transforms</headline>		<p>Wird das optionale Element <strong>Transforms</strong> angegeben, so durchlaufen die referenzierten Daten zunächst der Reihe nach sämtliche in den <strong>Transform</strong> Kindelementen aufgeführten Transformationen. Der Hashwert wird vom Ergebnis der letzten Transformation berechnet, die Reihenfolge der Transformationen ist also von Bedeutung. In dem Fall wird damit nicht das ursprüngliche, sondern das transformierte Dokument(fragment) signiert. Fehlt das <strong>Transforms</strong> Element wird der Hashwert vom gesamten referenzierten Objekt berechnet.</p>		<p>Jedes <strong>Transforms</strong> Element besteht dazu aus einem <keyword>Algorithm</keyword> Attribut mit dem anzuwendenden <link id="signatures_transform.html">Transformations-Algorithmus</link>.</p>		<headline id="DigestMethod">DigestMethod</headline>		<p>Das leere Pflichtelement <strong>DigestMethod</strong> enthält im <keyword>Algorithm</keyword> Attribut ausschließlich einen URI zur Identifikation des Message Digest Algorithmus. Der URI kann die in der folgenden Tabelle aufgeführten Werte annehmen.</p>		<table>			<head>				<data>Name</data>				<data>URI</data>				<data>Implementierung</data>			</head>			<row>				<data>					<strong>MD5</strong>				</data>				<data>http://www.w3.org/2000/09/xmldsig#md5</data>				<data>nicht empfohlen</data>			</row>			<row>				<data>					<strong>SHA 1</strong>				</data>				<data>http://www.w3.org/2000/09/xmldsig#sha1</data>				<data>erforderlich</data>			</row>		</table>		<headline id="DigestValue">DigestValue</headline>		<p>Mit dem in <link id="signatures_syntax_signedinfo.html#DigestMethod">DigestMethod</link> angegebenen Algorithmus wird der <strong>DigestValue</strong>, ein eindeutiger Hashwert des signierten Objekts, berechnet und per Base-64 encoding in diesem Element gespeichert. Der Hashwert, der auch als digitaler Fingerabdruck bezeichnet werden kann, ist meist kürzer als die signierten Daten und kann somit im folgenden Schritt schneller signiert werden. Es ist praktisch unmöglich, aus einem gegebenen Hashwert die ursprüngliche Nachricht zu ermitteln. Außerdem sollte es unmöglich sein, dass zwei beliebige Nachrichten denselben Hashwert ergeben (Kollision und Geburtstagsparadoxon).</p>	</text></chapter>