<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="../../resources/stylesheet.xsl"?><chapter category="basics" xmlns="http://www.xml-sicherheit.de" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xml:id="signatures_syntax_object" xml:lang="de" xsi:schemaLocation="http://www.xml-sicherheit.de ../../resources/documentation.xsd">	<title>Das Object Element</title>	<text>		<p>Das letzte Element <strong>Object</strong> kann Daten beliebigen Typs enthalten, aber auch XML-Dokumente oder Teile davon und beliebig oft vorkommen. Diese Daten gehören zur Signatur, werden aber außerhalb des Elements <link id="signatures_syntax_signedinfo.html">SignedInfo</link> gespeichert. Binärdaten müssen vor der Verwendung so transformiert werden, dass sie in XML-Dokumenten dargestellt werden können (wiederum Base-64 encoding).</p>		<p>			<strong>Object</strong> besitzt drei optionale Attribute: <keyword>Id</keyword>, <keyword>MimeType</keyword> und <keyword>Encoding</keyword>. <keyword>Id</keyword> dient wiederum zur Referenzierung des Object Elements von anderen Stellen innerhalb der digitalen Signatur und ist wiederum vom Typ ID. <keyword>MimeType</keyword> vom Typ String bestimmt den Typ der Daten in Object. Dieses Attribut wird beim Erzeugen der digitalen Signatur nicht beachtet, steht aber verarbeitenden Applikationen zur Verfügung. <keyword>Encoding</keyword> vom Typ anyURI identifiziert mit dem URI den Kodierungs-Mechanismus zur Verarbeitung der Daten. Derzeit wird nur das Base-64 encoding unterstützt.</p>		<p>Das Element Object kann als Kindelemente die Elemente <link id="signatures_syntax_object.html#SignatureProperties">SignatureProperties</link> und <link id="signatures_syntax_object.html#Manifest">Manifest</link> enthalten.</p>		<p id="SignatureProperties">			<strong>SignatureProperties</strong> enthalten beispielsweise weitere Informationen wie die Signaturzeit oder Informationen über die verwendete Hardware.</p>		<p id="Manifest">Ein <strong>Manifest</strong> Element enthält ausschließlich eine Sammlung von Referenzen auf Daten in Form einer Liste von <link id="signatures_syntax_signedinfo.html#Reference">Reference</link> Elementen. Im Unterschied zu den normalen <link id="signatures_syntax_signedinfo.html#Reference">Reference</link> Elementen hat bei einem Manifest die zugehörige Applikation die Kontrolle darüber, was passiert, wenn die Validierung einer oder mehrerer Referenzen fehlschlägt. Normalerweise würde in diesem Fall ja die gesamte Signatur ungültig. Um das zu verhindern wird bei einem Manifest nicht der Inhalt der angegebenen Referenzen validiert, sondern die Struktur des Manifests. Die Validierung der Referenzen steht hierbei also vollkommen unter der Kontrolle der Applikation. Manifeste sind ebenfalls interessant wenn sehr viele Signaturen mit unterschiedlichen Schlüsseln über eine große Anzahl von Dokumenten erstellt werden.</p>	</text></chapter>